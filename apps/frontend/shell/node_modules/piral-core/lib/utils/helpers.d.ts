export declare const removeIndicator: any;
export declare const none: any[];
export declare const noop: () => void;
export declare function prependItem<T>(items: Array<T>, item: T): any[];
export declare function appendItem<T>(items: Array<T>, item: T): any[];
export declare function prependItems<T>(items: Array<T>, newItems: Array<T>): any[];
export declare function appendItems<T>(items: Array<T>, newItems: Array<T>): any[];
export declare function excludeItem<T>(items: Array<T>, item: T): any[];
export declare function includeItem<T>(items: Array<T>, item: T): any[];
export declare function replaceOrAddItem<T>(items: Array<T>, item: T, predicate: (item: T) => boolean): any[];
export declare function removeNested<T, U = any>(obj: T, predicate: (item: U) => boolean): T;
export declare function excludeOn<T>(items: Array<T>, predicate: (item: T) => boolean): any[];
export declare function updateKey<T, TKey extends keyof T>(obj: T, key: TKey, value: T[TKey]): T;
export declare function withKey<T, TKey extends keyof T>(obj: T, key: TKey, value: T[TKey]): T;
export declare function withoutKey<T, TKey extends keyof T>(obj: T, key: TKey): T;
export declare function tryParseJson(content: string): any;
