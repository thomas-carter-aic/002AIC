import type { NpmClientType, NpmDirectClientType, NpmWapperClientType } from '../types';
import * as lerna from './lerna';
import * as npm from './npm';
import * as pnp from './pnp';
import * as pnpm from './pnpm';
import * as rush from './rush';
import * as yarn from './yarn';
import * as bun from './bun';
export declare const clients: {
    lerna: typeof lerna;
    npm: typeof npm;
    pnp: typeof pnp;
    pnpm: typeof pnpm;
    rush: typeof rush;
    yarn: typeof yarn;
    bun: typeof bun;
};
export declare function isWrapperClient(client: NpmClientType): client is NpmWapperClientType;
export declare function isDirectClient(client: NpmClientType): client is NpmDirectClientType;
export declare function detectDirectClients(root: string): Promise<{
    client: NpmDirectClientType;
    result: boolean;
}[]>;
export declare function detectWrapperClients(root: string): Promise<{
    client: NpmWapperClientType;
    result: boolean;
}[]>;
