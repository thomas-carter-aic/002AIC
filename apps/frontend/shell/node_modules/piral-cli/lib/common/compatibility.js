"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkAppShellCompatibility = checkAppShellCompatibility;
exports.checkCliCompatibility = checkCliCompatibility;
const info_1 = require("./info");
const package_1 = require("./package");
const constants_1 = require("./constants");
const log_1 = require("./log");
function checkAppShellCompatibility(piralVersion) {
    (0, log_1.log)('generalDebug_0003', `Checking compatibility ...`);
    if (!piralVersion) {
        (0, log_1.log)('appShellMaybeIncompatible_0102', info_1.cliVersion);
        return false;
    }
    const compatible = (0, info_1.findCompatVersion)(piralVersion);
    (0, log_1.log)('generalDebug_0003', `Used versions: "${compatible}" and "${info_1.compatVersion}".`);
    if (info_1.compatVersion !== compatible) {
        (0, log_1.log)('appShellIncompatible_0100', piralVersion, info_1.cliVersion);
        return false;
    }
    return true;
}
async function checkCliCompatibility(root) {
    (0, log_1.log)('generalDebug_0003', `Checking compatibility ...`);
    const piralVersion = await (0, package_1.findPackageVersion)(root, constants_1.frameworkLibs);
    const compatible = (0, info_1.findCompatVersion)(piralVersion);
    (0, log_1.log)('generalDebug_0003', `Used versions: "${compatible}" and "${info_1.compatVersion}".`);
    if (info_1.compatVersion !== compatible) {
        (0, log_1.log)('toolingIncompatible_0101', piralVersion, info_1.cliVersion);
        return false;
    }
    return true;
}
//# sourceMappingURL=compatibility.js.map