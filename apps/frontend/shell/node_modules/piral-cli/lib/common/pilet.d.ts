import { LogLevels, PiletSchemaVersion } from '../types';
export interface BuildPiletOptions {
    entryModule: string;
    app?: string;
    originalSchemaVersion: PiletSchemaVersion;
    target?: string;
    fresh: boolean;
    logLevel: LogLevels;
    bundlerName: string;
    optimizeModules: boolean;
    sourceMaps: boolean;
    watch: boolean;
    contentHash: boolean;
    minify: boolean;
    declaration: boolean;
    hooks?: {
        beforeBuild?(e: any): Promise<void>;
        afterBuild?(e: any): Promise<void>;
        beforeDeclaration?(e: any): Promise<void>;
        afterDeclaration?(e: any): Promise<void>;
    };
    _: Record<string, any>;
}
export declare function triggerBuildPilet({ target, app, originalSchemaVersion, fresh, entryModule, logLevel, optimizeModules, sourceMaps, watch, contentHash, declaration, minify, hooks, bundlerName, _, }: BuildPiletOptions): Promise<{
    piletPackage: any;
    root: string;
    outDir: string;
    apps: import("../types").AppDefinition[];
    outFile: string;
    dest: string;
}>;
