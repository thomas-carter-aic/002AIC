import { ToolCommand, ToolCommandRunner, ToolCommandWrapper, ToolCommandFlagsSetter, RuleRunner, PiralRuleContext, PiletRuleContext, PackagePatcher, BundlerDefinition } from './types';
export declare function withCommand<T, U>(command: ToolCommand<T, U>): any;
export declare function withoutCommand(commandName: string): any;
export declare function withFlags<T>(commandName: string, setter: ToolCommandFlagsSetter<T>): any;
export declare function wrapCommand<U>(commandName: string, wrapper: ToolCommandWrapper<U>): any;
export declare function beforeCommand<U>(commandName: string, before: ToolCommandRunner<U>): any;
export declare function afterCommand<U>(commandName: string, after: ToolCommandRunner<U>): any;
export declare function withPiralRule(name: string, run: RuleRunner<PiralRuleContext>): any;
export declare function withPiletRule(name: string, run: RuleRunner<PiletRuleContext>): any;
export declare function withPatcher(packageName: string, patch: PackagePatcher): any;
export declare function withBundler(name: string, actions: BundlerDefinition): any;
