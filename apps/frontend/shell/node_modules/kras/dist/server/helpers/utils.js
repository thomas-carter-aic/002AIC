export function mapReverse(items, select) {
    const dest = [];
    for (let i = items.length, j = 0; i--; j++) {
        dest.push(select(items[i], i, j));
    }
    return dest;
}
export function filterReverse(items, check) {
    const dest = [];
    for (let i = items.length, j = 0; i--; j++) {
        const item = items[i];
        if (check(item, i, j)) {
            dest.push(item);
        }
    }
    return dest;
}
export function deepMerge(obj, value) {
    Object.keys(value).forEach((key) => {
        const oldItem = obj[key];
        const newItem = value[key];
        if (newItem === undefined) {
            delete obj[key];
        }
        else if (Array.isArray(oldItem) && Array.isArray(newItem)) {
            obj[key] = [...oldItem, ...newItem];
        }
        else if (typeof oldItem === 'object') {
            obj[key] = deepMerge({ ...oldItem }, newItem);
        }
        else {
            obj[key] = newItem;
        }
    });
    return obj;
}
export function getLast(value) {
    if (Array.isArray(value)) {
        return value[value.length - 1];
    }
    return value;
}
export function getFirst(value) {
    if (Array.isArray(value)) {
        return value[0];
    }
    return value;
}
